package com.capgemini.librarymanagementsystemjdbc.controller;

import java.sql.Date;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Iterator;
import java.util.List;
import java.util.Scanner;


import com.capgemini.librarymanagementsystemjdbc.dto.AdminBean;
import com.capgemini.librarymanagementsystemjdbc.dto.BookBean;
import com.capgemini.librarymanagementsystemjdbc.dto.LibraryUserBean;
import com.capgemini.librarymanagementsystemjdbc.dto.UserBean1;
import com.capgemini.librarymanagementsystemjdbc.exception.LMSException;
import com.capgemini.librarymanagementsystemjdbc.factory.LibraryManagementSystemFactory;
import com.capgemini.librarymanagementsystemjdbc.service.AdminService;
import com.capgemini.librarymanagementsystemjdbc.service.UserService;
import com.capgemini.librarymanagementsystemjdbc.validation.LibraryManagementSystemValidation;

public class LibraryMangementSystemController {
	public static void main(String[] args) {
		AdminBean adminBean=LibraryManagementSystemFactory.getAdminBean();
		LibraryUserBean libraryUserBean=LibraryManagementSystemFactory.getLibraryUserBean();
		UserBean1 userBean=LibraryManagementSystemFactory.getUserBean();
		AdminService adminService=LibraryManagementSystemFactory.getAdminService();
		UserService userService=LibraryManagementSystemFactory.getUserService();
		LibraryManagementSystemValidation lmsValidation=LibraryManagementSystemFactory.getLibraryManagementSystemValidation();
		Scanner scanner=new Scanner(System.in);
		int choice;
		int check;
		int userChoice;
		do {
			System.out.println("1.Amin Login");
			System.out.println("2. User Login");
			System.out.println("Enter your choice");
			choice = scanner.nextInt();
			switch(choice) {
			case 1:
				System.out.println("-----------------");
				System.out.println("Enter Admin Email id");
				String emailId = scanner.next();
				System.out.println("Enter Admin password");
				String password = scanner.next();
				try {
					LibraryUserBean bean=adminService.login(emailId, password);
					if(bean!=null) {
					System.out.println("Admin Login Successfull");
					}else {
						System.out.println("Admin cannot login");
					}
					do {
						System.out.println("1. Register");
						System.out.println("2. Search");
						System.out.println("3. Add Book");
						System.out.println("4. Show All Books");
						System.out.println("5. Show Users");
						System.out.println("6. Remove Book");
						System.out.println("7. Book Issue");
						System.out.println("8. Show Requests");
						System.out.println("9. Receive Returned Book");
						System.out.println("0. Exit");

						System.out.println("Enter your choice");
						check = scanner.nextInt();
						switch(check) {
						case 1:
							System.out.println("Enter user id");
							int userId=scanner.nextInt();
							System.out.println("Enter username");
							String userName=scanner.next();
							System.out.println("Enter Firstname");
							String firstName=scanner.next();
							System.out.println("Enter Lastname");
							String lastName=scanner.next();
							System.out.println("Enter email id");
							String email=scanner.next();
							System.out.println("Enter password");
							String userPassword=scanner.next();
							System.out.println("Enter role");
							String role=scanner.next();
							LibraryUserBean user1=new LibraryUserBean();
							user1.setId(userId);
							user1.setUserName(userName);
							user1.setFirstName(firstName);
							user1.setLastName(lastName);
							user1.setEmailId(email);
							user1.setPassword(userPassword);
							user1.setRole(role);
							
							boolean res=adminService.addUser(user1);
							
							if(res) {
								System.out.println("user registered succesfully");
							}else {
								System.out.println("not registered");
							}
							break;
						case 2:
							System.out.println("Search a Book");
							System.out.println("Enter book Id");
							int searchBookId = scanner.nextInt();
							try {
							BookBean bookInfo=adminService.searchBook(searchBookId);
							if(bookInfo!=null) {
							System.out.println("Book is found");
							System.out.println(bookInfo.getBookid());
							System.out.println(bookInfo.getBookname());
							System.out.println(bookInfo.getAuthorname());
							
							}
							}catch(Exception e) {
								System.out.println("book not avaliable in library");
							}
							
							break;
						case 3:
							System.out.println("Enter book id");
							int bookid=scanner.nextInt();
							System.out.println("Enter Book name");
							String bookname=scanner.next();
							System.out.println("Enter author name");
							String authorname=scanner.next();
							System.out.println("Enter publishers name");
							String bookPublisher=scanner.next();
							System.out.println("Enter category");
							String category=scanner.next();
							
							
							
							
							BookBean bookBean1 = new BookBean();

							bookBean1.setBookid(bookid);
							bookBean1.setAuthorname(authorname);
							bookBean1.setBookname(bookname);
							bookBean1.setPublisher(bookPublisher);
							bookBean1.setCategory(category);
						
							boolean bookAdded = adminService.addBook(bookBean1);
							System.out.println(bookAdded);

							if (bookAdded) {
								System.out.println("book is added");
							} else {
								System.out.println("book is not added");
							}

							break;
						case 4:
							
							try {
								System.out.println("Books present in library are :");
								System.out.println("-------------------------------");

								List<BookBean> allBooks = adminService.showBooks();
								Iterator<BookBean> iterator=allBooks.iterator();
								while(iterator.hasNext()) {
									
									BookBean book=(BookBean)iterator.next();
								

									System.out.println("Book id ---------->" + book.getBookid());
									System.out.println("Book Name --------> " + book.getBookname());
									System.out.println("Book Authour------> " + book.getAuthorname());
									System.out.println("Book publisher------->"+book.getPublisher());
									System.out.println("Book Category-------->"+book.getCategory());
									System.out.println("-----------------------------------------------------");
								}
								
							} catch (Exception e) {
								System.out.println("no books present in library");
							}
							break;
						case 5:
							try {
								System.out.println("users in library are :");
								System.out.println("-------------------------------");

								List<LibraryUserBean> allBooks = adminService.showUsers();
								Iterator<LibraryUserBean> iterator=allBooks.iterator();
								while(iterator.hasNext()) {
									
									LibraryUserBean user=(LibraryUserBean)iterator.next();
								

									System.out.println("user id ---------->" + user.getId());
									System.out.println("Username --------> " + user.getUserName());
									System.out.println("Firstname------> " + user.getFirstName());
									System.out.println("Lastname------->"+user.getLastName());
									System.out.println("Email Id-------->"+user.getEmailId());
									System.out.println("Role---------->"+user.getRole());
									System.out.println("-----------------------------------------------------");
								}
								
							} catch (Exception e) {
								System.out.println("no books present in library");
							}
							break;
						case 6:
							System.out.println("Enter the bookId to be removed:");
							int bookId=scanner.nextInt();
							boolean isDeleted=adminService.removeBook(bookId);
							if(isDeleted) {
								System.out.println("Book removed from library");
							}else {
								System.out.println("Book cannot be removed");
							}
							break;
						case 7:
							LibraryUserBean user=new LibraryUserBean();
							BookBean book=new BookBean();
							System.out.println("Enter bookId ");
							int bid=scanner.nextInt();
							System.out.println("Enter User Id");
							int uid=scanner.nextInt();
							boolean isIssued=adminService.bookIssue(user, book);
							if(isIssued) {
								System.out.println("book issued");
								book.setBookid(bid);
								user.setId(uid);
								
								
				
								
							}

							
						}

						
					}while(check!=0);
				}catch(Exception e) {
					System.out.println("Invalid Credentials");
				}
				break;
			case 2:
				System.out.println("-----------------");
				System.out.println("Enter User Email id");
				String userEmailId = scanner.next();
				System.out.println("Enter User password");
				String userPassword = scanner.next();

				try {
					LibraryUserBean userInfo = userService.login(userEmailId, userPassword);
					if(userInfo!=null) {
					System.out.println("User logged in");
					}else {
						System.out.println("Invalid Credentials");
					}
					do {
						System.out.println("1. Search a Book");
						System.out.println("2. Request a Book");
						System.out.println("3. Return Book");
						System.out.println("0. Exit");
						System.out.println("Enter your choice");
						userChoice = scanner.nextInt();
						switch (userChoice) {
						case 1:
							System.out.println("Search a Book");
							System.out.println("Enter book Id");
							int searchBookId = scanner.nextInt();
							try {
							BookBean bookInfo=userService.searchById(searchBookId);
							if(bookInfo!=null) {
							System.out.println("Book is found");
							System.out.println("Book Id---------->"+bookInfo.getBookid());
							System.out.println("Book name is---------->"+bookInfo.getBookname());
							System.out.println("Author name is---------->"+bookInfo.getAuthorname());
//							System.out.println("Book is found");
							}else {
								System.out.println("Book is not avaliable in library");
							}
							}catch(Exception e) {
								e.printStackTrace();
							}
							
							break;

							
						
						}
			
				
			}while(userChoice!=0);
				}catch(Exception e) {
					
				}
			}
		}while(true);
	

}
}
